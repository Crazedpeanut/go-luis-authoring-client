// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetPhraseListFeatureReader is a Reader for the GetPhraseListFeature structure.
type GetPhraseListFeatureReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPhraseListFeatureReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPhraseListFeatureOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPhraseListFeatureBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPhraseListFeatureUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPhraseListFeatureForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetPhraseListFeatureTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPhraseListFeatureOK creates a GetPhraseListFeatureOK with default headers values
func NewGetPhraseListFeatureOK() *GetPhraseListFeatureOK {
	return &GetPhraseListFeatureOK{}
}

/*GetPhraseListFeatureOK handles this case with default header values.

A JSON object containing the phraselist feature info.
*/
type GetPhraseListFeatureOK struct {
}

func (o *GetPhraseListFeatureOK) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/phraselists/{phraselistId}][%d] getPhraseListFeatureOK ", 200)
}

func (o *GetPhraseListFeatureOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhraseListFeatureBadRequest creates a GetPhraseListFeatureBadRequest with default headers values
func NewGetPhraseListFeatureBadRequest() *GetPhraseListFeatureBadRequest {
	return &GetPhraseListFeatureBadRequest{}
}

/*GetPhraseListFeatureBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.
*/
type GetPhraseListFeatureBadRequest struct {
}

func (o *GetPhraseListFeatureBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/phraselists/{phraselistId}][%d] getPhraseListFeatureBadRequest ", 400)
}

func (o *GetPhraseListFeatureBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhraseListFeatureUnauthorized creates a GetPhraseListFeatureUnauthorized with default headers values
func NewGetPhraseListFeatureUnauthorized() *GetPhraseListFeatureUnauthorized {
	return &GetPhraseListFeatureUnauthorized{}
}

/*GetPhraseListFeatureUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls

*/
type GetPhraseListFeatureUnauthorized struct {
}

func (o *GetPhraseListFeatureUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/phraselists/{phraselistId}][%d] getPhraseListFeatureUnauthorized ", 401)
}

func (o *GetPhraseListFeatureUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhraseListFeatureForbidden creates a GetPhraseListFeatureForbidden with default headers values
func NewGetPhraseListFeatureForbidden() *GetPhraseListFeatureForbidden {
	return &GetPhraseListFeatureForbidden{}
}

/*GetPhraseListFeatureForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type GetPhraseListFeatureForbidden struct {
}

func (o *GetPhraseListFeatureForbidden) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/phraselists/{phraselistId}][%d] getPhraseListFeatureForbidden ", 403)
}

func (o *GetPhraseListFeatureForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhraseListFeatureTooManyRequests creates a GetPhraseListFeatureTooManyRequests with default headers values
func NewGetPhraseListFeatureTooManyRequests() *GetPhraseListFeatureTooManyRequests {
	return &GetPhraseListFeatureTooManyRequests{}
}

/*GetPhraseListFeatureTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type GetPhraseListFeatureTooManyRequests struct {
}

func (o *GetPhraseListFeatureTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/phraselists/{phraselistId}][%d] getPhraseListFeatureTooManyRequests ", 429)
}

func (o *GetPhraseListFeatureTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
