// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ResetProgrammaticKeyReader is a Reader for the ResetProgrammaticKey structure.
type ResetProgrammaticKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResetProgrammaticKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResetProgrammaticKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewResetProgrammaticKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewResetProgrammaticKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewResetProgrammaticKeyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewResetProgrammaticKeyOK creates a ResetProgrammaticKeyOK with default headers values
func NewResetProgrammaticKeyOK() *ResetProgrammaticKeyOK {
	return &ResetProgrammaticKeyOK{}
}

/*ResetProgrammaticKeyOK handles this case with default header values.

The new programmatic key.
*/
type ResetProgrammaticKeyOK struct {
}

func (o *ResetProgrammaticKeyOK) Error() string {
	return fmt.Sprintf("[PUT /programmatickey][%d] resetProgrammaticKeyOK ", 200)
}

func (o *ResetProgrammaticKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetProgrammaticKeyBadRequest creates a ResetProgrammaticKeyBadRequest with default headers values
func NewResetProgrammaticKeyBadRequest() *ResetProgrammaticKeyBadRequest {
	return &ResetProgrammaticKeyBadRequest{}
}

/*ResetProgrammaticKeyBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.

*/
type ResetProgrammaticKeyBadRequest struct {
}

func (o *ResetProgrammaticKeyBadRequest) Error() string {
	return fmt.Sprintf("[PUT /programmatickey][%d] resetProgrammaticKeyBadRequest ", 400)
}

func (o *ResetProgrammaticKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetProgrammaticKeyUnauthorized creates a ResetProgrammaticKeyUnauthorized with default headers values
func NewResetProgrammaticKeyUnauthorized() *ResetProgrammaticKeyUnauthorized {
	return &ResetProgrammaticKeyUnauthorized{}
}

/*ResetProgrammaticKeyUnauthorized handles this case with default header values.

ResetProgrammaticKeyUnauthorized reset programmatic key unauthorized
*/
type ResetProgrammaticKeyUnauthorized struct {
}

func (o *ResetProgrammaticKeyUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /programmatickey][%d] resetProgrammaticKeyUnauthorized ", 401)
}

func (o *ResetProgrammaticKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetProgrammaticKeyTooManyRequests creates a ResetProgrammaticKeyTooManyRequests with default headers values
func NewResetProgrammaticKeyTooManyRequests() *ResetProgrammaticKeyTooManyRequests {
	return &ResetProgrammaticKeyTooManyRequests{}
}

/*ResetProgrammaticKeyTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type ResetProgrammaticKeyTooManyRequests struct {
}

func (o *ResetProgrammaticKeyTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /programmatickey][%d] resetProgrammaticKeyTooManyRequests ", 429)
}

func (o *ResetProgrammaticKeyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
