// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddUserToAccessListReader is a Reader for the AddUserToAccessList structure.
type AddUserToAccessListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddUserToAccessListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddUserToAccessListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddUserToAccessListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddUserToAccessListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddUserToAccessListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAddUserToAccessListTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddUserToAccessListOK creates a AddUserToAccessListOK with default headers values
func NewAddUserToAccessListOK() *AddUserToAccessListOK {
	return &AddUserToAccessListOK{}
}

/*AddUserToAccessListOK handles this case with default header values.

AddUserToAccessListOK add user to access list o k
*/
type AddUserToAccessListOK struct {
}

func (o *AddUserToAccessListOK) Error() string {
	return fmt.Sprintf("[POST /apps/{appId}/permissions][%d] addUserToAccessListOK ", 200)
}

func (o *AddUserToAccessListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddUserToAccessListBadRequest creates a AddUserToAccessListBadRequest with default headers values
func NewAddUserToAccessListBadRequest() *AddUserToAccessListBadRequest {
	return &AddUserToAccessListBadRequest{}
}

/*AddUserToAccessListBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.

This error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.
*/
type AddUserToAccessListBadRequest struct {
}

func (o *AddUserToAccessListBadRequest) Error() string {
	return fmt.Sprintf("[POST /apps/{appId}/permissions][%d] addUserToAccessListBadRequest ", 400)
}

func (o *AddUserToAccessListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddUserToAccessListUnauthorized creates a AddUserToAccessListUnauthorized with default headers values
func NewAddUserToAccessListUnauthorized() *AddUserToAccessListUnauthorized {
	return &AddUserToAccessListUnauthorized{}
}

/*AddUserToAccessListUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls
*/
type AddUserToAccessListUnauthorized struct {
}

func (o *AddUserToAccessListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /apps/{appId}/permissions][%d] addUserToAccessListUnauthorized ", 401)
}

func (o *AddUserToAccessListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddUserToAccessListForbidden creates a AddUserToAccessListForbidden with default headers values
func NewAddUserToAccessListForbidden() *AddUserToAccessListForbidden {
	return &AddUserToAccessListForbidden{}
}

/*AddUserToAccessListForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type AddUserToAccessListForbidden struct {
}

func (o *AddUserToAccessListForbidden) Error() string {
	return fmt.Sprintf("[POST /apps/{appId}/permissions][%d] addUserToAccessListForbidden ", 403)
}

func (o *AddUserToAccessListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddUserToAccessListTooManyRequests creates a AddUserToAccessListTooManyRequests with default headers values
func NewAddUserToAccessListTooManyRequests() *AddUserToAccessListTooManyRequests {
	return &AddUserToAccessListTooManyRequests{}
}

/*AddUserToAccessListTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type AddUserToAccessListTooManyRequests struct {
}

func (o *AddUserToAccessListTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /apps/{appId}/permissions][%d] addUserToAccessListTooManyRequests ", 429)
}

func (o *AddUserToAccessListTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
