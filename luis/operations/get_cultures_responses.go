// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetCulturesReader is a Reader for the GetCultures structure.
type GetCulturesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCulturesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCulturesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCulturesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCulturesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCulturesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCulturesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCulturesOK creates a GetCulturesOK with default headers values
func NewGetCulturesOK() *GetCulturesOK {
	return &GetCulturesOK{}
}

/*GetCulturesOK handles this case with default header values.

A list object containing the supported application cultures.
*/
type GetCulturesOK struct {
}

func (o *GetCulturesOK) Error() string {
	return fmt.Sprintf("[GET /apps/cultures][%d] getCulturesOK ", 200)
}

func (o *GetCulturesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCulturesBadRequest creates a GetCulturesBadRequest with default headers values
func NewGetCulturesBadRequest() *GetCulturesBadRequest {
	return &GetCulturesBadRequest{}
}

/*GetCulturesBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.
*/
type GetCulturesBadRequest struct {
}

func (o *GetCulturesBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/cultures][%d] getCulturesBadRequest ", 400)
}

func (o *GetCulturesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCulturesUnauthorized creates a GetCulturesUnauthorized with default headers values
func NewGetCulturesUnauthorized() *GetCulturesUnauthorized {
	return &GetCulturesUnauthorized{}
}

/*GetCulturesUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls
*/
type GetCulturesUnauthorized struct {
}

func (o *GetCulturesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/cultures][%d] getCulturesUnauthorized ", 401)
}

func (o *GetCulturesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCulturesForbidden creates a GetCulturesForbidden with default headers values
func NewGetCulturesForbidden() *GetCulturesForbidden {
	return &GetCulturesForbidden{}
}

/*GetCulturesForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type GetCulturesForbidden struct {
}

func (o *GetCulturesForbidden) Error() string {
	return fmt.Sprintf("[GET /apps/cultures][%d] getCulturesForbidden ", 403)
}

func (o *GetCulturesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCulturesTooManyRequests creates a GetCulturesTooManyRequests with default headers values
func NewGetCulturesTooManyRequests() *GetCulturesTooManyRequests {
	return &GetCulturesTooManyRequests{}
}

/*GetCulturesTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type GetCulturesTooManyRequests struct {
}

func (o *GetCulturesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /apps/cultures][%d] getCulturesTooManyRequests ", 429)
}

func (o *GetCulturesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
