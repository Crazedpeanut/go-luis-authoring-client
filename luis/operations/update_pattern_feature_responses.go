// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdatePatternFeatureReader is a Reader for the UpdatePatternFeature structure.
type UpdatePatternFeatureReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePatternFeatureReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePatternFeatureOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdatePatternFeatureBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdatePatternFeatureUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePatternFeatureForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdatePatternFeatureTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdatePatternFeatureOK creates a UpdatePatternFeatureOK with default headers values
func NewUpdatePatternFeatureOK() *UpdatePatternFeatureOK {
	return &UpdatePatternFeatureOK{}
}

/*UpdatePatternFeatureOK handles this case with default header values.

UpdatePatternFeatureOK update pattern feature o k
*/
type UpdatePatternFeatureOK struct {
}

func (o *UpdatePatternFeatureOK) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/patterns/{patternId}][%d] updatePatternFeatureOK ", 200)
}

func (o *UpdatePatternFeatureOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePatternFeatureBadRequest creates a UpdatePatternFeatureBadRequest with default headers values
func NewUpdatePatternFeatureBadRequest() *UpdatePatternFeatureBadRequest {
	return &UpdatePatternFeatureBadRequest{}
}

/*UpdatePatternFeatureBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.

This error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.
*/
type UpdatePatternFeatureBadRequest struct {
}

func (o *UpdatePatternFeatureBadRequest) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/patterns/{patternId}][%d] updatePatternFeatureBadRequest ", 400)
}

func (o *UpdatePatternFeatureBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePatternFeatureUnauthorized creates a UpdatePatternFeatureUnauthorized with default headers values
func NewUpdatePatternFeatureUnauthorized() *UpdatePatternFeatureUnauthorized {
	return &UpdatePatternFeatureUnauthorized{}
}

/*UpdatePatternFeatureUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls

*/
type UpdatePatternFeatureUnauthorized struct {
}

func (o *UpdatePatternFeatureUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/patterns/{patternId}][%d] updatePatternFeatureUnauthorized ", 401)
}

func (o *UpdatePatternFeatureUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePatternFeatureForbidden creates a UpdatePatternFeatureForbidden with default headers values
func NewUpdatePatternFeatureForbidden() *UpdatePatternFeatureForbidden {
	return &UpdatePatternFeatureForbidden{}
}

/*UpdatePatternFeatureForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type UpdatePatternFeatureForbidden struct {
}

func (o *UpdatePatternFeatureForbidden) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/patterns/{patternId}][%d] updatePatternFeatureForbidden ", 403)
}

func (o *UpdatePatternFeatureForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePatternFeatureTooManyRequests creates a UpdatePatternFeatureTooManyRequests with default headers values
func NewUpdatePatternFeatureTooManyRequests() *UpdatePatternFeatureTooManyRequests {
	return &UpdatePatternFeatureTooManyRequests{}
}

/*UpdatePatternFeatureTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type UpdatePatternFeatureTooManyRequests struct {
}

func (o *UpdatePatternFeatureTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/patterns/{patternId}][%d] updatePatternFeatureTooManyRequests ", 429)
}

func (o *UpdatePatternFeatureTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
