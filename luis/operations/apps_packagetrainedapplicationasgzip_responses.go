// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AppsPackagetrainedapplicationasgzipReader is a Reader for the AppsPackagetrainedapplicationasgzip structure.
type AppsPackagetrainedapplicationasgzipReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AppsPackagetrainedapplicationasgzipReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAppsPackagetrainedapplicationasgzipOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAppsPackagetrainedapplicationasgzipBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAppsPackagetrainedapplicationasgzipUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAppsPackagetrainedapplicationasgzipForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAppsPackagetrainedapplicationasgzipTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAppsPackagetrainedapplicationasgzipOK creates a AppsPackagetrainedapplicationasgzipOK with default headers values
func NewAppsPackagetrainedapplicationasgzipOK() *AppsPackagetrainedapplicationasgzipOK {
	return &AppsPackagetrainedapplicationasgzipOK{}
}

/*AppsPackagetrainedapplicationasgzipOK handles this case with default header values.

The GZip stream of the exported trained application.
*/
type AppsPackagetrainedapplicationasgzipOK struct {
}

func (o *AppsPackagetrainedapplicationasgzipOK) Error() string {
	return fmt.Sprintf("[GET /package/{appId}/versions/{versionId}/gzip][%d] appsPackagetrainedapplicationasgzipOK ", 200)
}

func (o *AppsPackagetrainedapplicationasgzipOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAppsPackagetrainedapplicationasgzipBadRequest creates a AppsPackagetrainedapplicationasgzipBadRequest with default headers values
func NewAppsPackagetrainedapplicationasgzipBadRequest() *AppsPackagetrainedapplicationasgzipBadRequest {
	return &AppsPackagetrainedapplicationasgzipBadRequest{}
}

/*AppsPackagetrainedapplicationasgzipBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.
*/
type AppsPackagetrainedapplicationasgzipBadRequest struct {
}

func (o *AppsPackagetrainedapplicationasgzipBadRequest) Error() string {
	return fmt.Sprintf("[GET /package/{appId}/versions/{versionId}/gzip][%d] appsPackagetrainedapplicationasgzipBadRequest ", 400)
}

func (o *AppsPackagetrainedapplicationasgzipBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAppsPackagetrainedapplicationasgzipUnauthorized creates a AppsPackagetrainedapplicationasgzipUnauthorized with default headers values
func NewAppsPackagetrainedapplicationasgzipUnauthorized() *AppsPackagetrainedapplicationasgzipUnauthorized {
	return &AppsPackagetrainedapplicationasgzipUnauthorized{}
}

/*AppsPackagetrainedapplicationasgzipUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls

*/
type AppsPackagetrainedapplicationasgzipUnauthorized struct {
}

func (o *AppsPackagetrainedapplicationasgzipUnauthorized) Error() string {
	return fmt.Sprintf("[GET /package/{appId}/versions/{versionId}/gzip][%d] appsPackagetrainedapplicationasgzipUnauthorized ", 401)
}

func (o *AppsPackagetrainedapplicationasgzipUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAppsPackagetrainedapplicationasgzipForbidden creates a AppsPackagetrainedapplicationasgzipForbidden with default headers values
func NewAppsPackagetrainedapplicationasgzipForbidden() *AppsPackagetrainedapplicationasgzipForbidden {
	return &AppsPackagetrainedapplicationasgzipForbidden{}
}

/*AppsPackagetrainedapplicationasgzipForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type AppsPackagetrainedapplicationasgzipForbidden struct {
}

func (o *AppsPackagetrainedapplicationasgzipForbidden) Error() string {
	return fmt.Sprintf("[GET /package/{appId}/versions/{versionId}/gzip][%d] appsPackagetrainedapplicationasgzipForbidden ", 403)
}

func (o *AppsPackagetrainedapplicationasgzipForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAppsPackagetrainedapplicationasgzipTooManyRequests creates a AppsPackagetrainedapplicationasgzipTooManyRequests with default headers values
func NewAppsPackagetrainedapplicationasgzipTooManyRequests() *AppsPackagetrainedapplicationasgzipTooManyRequests {
	return &AppsPackagetrainedapplicationasgzipTooManyRequests{}
}

/*AppsPackagetrainedapplicationasgzipTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type AppsPackagetrainedapplicationasgzipTooManyRequests struct {
}

func (o *AppsPackagetrainedapplicationasgzipTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /package/{appId}/versions/{versionId}/gzip][%d] appsPackagetrainedapplicationasgzipTooManyRequests ", 429)
}

func (o *AppsPackagetrainedapplicationasgzipTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
