// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PublishApplicationReader is a Reader for the PublishApplication structure.
type PublishApplicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PublishApplicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPublishApplicationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 207:
		result := NewPublishApplicationMultiStatus()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPublishApplicationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPublishApplicationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPublishApplicationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPublishApplicationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPublishApplicationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPublishApplicationCreated creates a PublishApplicationCreated with default headers values
func NewPublishApplicationCreated() *PublishApplicationCreated {
	return &PublishApplicationCreated{}
}

/*PublishApplicationCreated handles this case with default header values.

An object containing the application endpoint URL and its assigned endpoint key.
*/
type PublishApplicationCreated struct {
}

func (o *PublishApplicationCreated) Error() string {
	return fmt.Sprintf("[POST /apps/{appId}/publish][%d] publishApplicationCreated ", 201)
}

func (o *PublishApplicationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPublishApplicationMultiStatus creates a PublishApplicationMultiStatus with default headers values
func NewPublishApplicationMultiStatus() *PublishApplicationMultiStatus {
	return &PublishApplicationMultiStatus{}
}

/*PublishApplicationMultiStatus handles this case with default header values.

An object containing the application endpoint URL and its assigned endpoint key.
*/
type PublishApplicationMultiStatus struct {
}

func (o *PublishApplicationMultiStatus) Error() string {
	return fmt.Sprintf("[POST /apps/{appId}/publish][%d] publishApplicationMultiStatus ", 207)
}

func (o *PublishApplicationMultiStatus) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPublishApplicationBadRequest creates a PublishApplicationBadRequest with default headers values
func NewPublishApplicationBadRequest() *PublishApplicationBadRequest {
	return &PublishApplicationBadRequest{}
}

/*PublishApplicationBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.

This error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.

Other reasons for receiving this error:

* app can't be published because model isn't trained
* app can't be published in region specified


*/
type PublishApplicationBadRequest struct {
}

func (o *PublishApplicationBadRequest) Error() string {
	return fmt.Sprintf("[POST /apps/{appId}/publish][%d] publishApplicationBadRequest ", 400)
}

func (o *PublishApplicationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPublishApplicationUnauthorized creates a PublishApplicationUnauthorized with default headers values
func NewPublishApplicationUnauthorized() *PublishApplicationUnauthorized {
	return &PublishApplicationUnauthorized{}
}

/*PublishApplicationUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls

*/
type PublishApplicationUnauthorized struct {
}

func (o *PublishApplicationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /apps/{appId}/publish][%d] publishApplicationUnauthorized ", 401)
}

func (o *PublishApplicationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPublishApplicationForbidden creates a PublishApplicationForbidden with default headers values
func NewPublishApplicationForbidden() *PublishApplicationForbidden {
	return &PublishApplicationForbidden{}
}

/*PublishApplicationForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type PublishApplicationForbidden struct {
}

func (o *PublishApplicationForbidden) Error() string {
	return fmt.Sprintf("[POST /apps/{appId}/publish][%d] publishApplicationForbidden ", 403)
}

func (o *PublishApplicationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPublishApplicationTooManyRequests creates a PublishApplicationTooManyRequests with default headers values
func NewPublishApplicationTooManyRequests() *PublishApplicationTooManyRequests {
	return &PublishApplicationTooManyRequests{}
}

/*PublishApplicationTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type PublishApplicationTooManyRequests struct {
}

func (o *PublishApplicationTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /apps/{appId}/publish][%d] publishApplicationTooManyRequests ", 429)
}

func (o *PublishApplicationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPublishApplicationServiceUnavailable creates a PublishApplicationServiceUnavailable with default headers values
func NewPublishApplicationServiceUnavailable() *PublishApplicationServiceUnavailable {
	return &PublishApplicationServiceUnavailable{}
}

/*PublishApplicationServiceUnavailable handles this case with default header values.

A string with the error message
*/
type PublishApplicationServiceUnavailable struct {
}

func (o *PublishApplicationServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /apps/{appId}/publish][%d] publishApplicationServiceUnavailable ", 503)
}

func (o *PublishApplicationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
