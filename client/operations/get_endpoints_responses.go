// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetEndpointsReader is a Reader for the GetEndpoints structure.
type GetEndpointsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEndpointsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEndpointsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEndpointsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetEndpointsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEndpointsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetEndpointsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEndpointsOK creates a GetEndpointsOK with default headers values
func NewGetEndpointsOK() *GetEndpointsOK {
	return &GetEndpointsOK{}
}

/*GetEndpointsOK handles this case with default header values.

Returns a list of endpoints regions and their corresponding endpoint URL
*/
type GetEndpointsOK struct {
}

func (o *GetEndpointsOK) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/endpoints][%d] getEndpointsOK ", 200)
}

func (o *GetEndpointsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEndpointsBadRequest creates a GetEndpointsBadRequest with default headers values
func NewGetEndpointsBadRequest() *GetEndpointsBadRequest {
	return &GetEndpointsBadRequest{}
}

/*GetEndpointsBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.
*/
type GetEndpointsBadRequest struct {
}

func (o *GetEndpointsBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/endpoints][%d] getEndpointsBadRequest ", 400)
}

func (o *GetEndpointsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEndpointsUnauthorized creates a GetEndpointsUnauthorized with default headers values
func NewGetEndpointsUnauthorized() *GetEndpointsUnauthorized {
	return &GetEndpointsUnauthorized{}
}

/*GetEndpointsUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls
*/
type GetEndpointsUnauthorized struct {
}

func (o *GetEndpointsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/endpoints][%d] getEndpointsUnauthorized ", 401)
}

func (o *GetEndpointsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEndpointsForbidden creates a GetEndpointsForbidden with default headers values
func NewGetEndpointsForbidden() *GetEndpointsForbidden {
	return &GetEndpointsForbidden{}
}

/*GetEndpointsForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type GetEndpointsForbidden struct {
}

func (o *GetEndpointsForbidden) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/endpoints][%d] getEndpointsForbidden ", 403)
}

func (o *GetEndpointsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEndpointsTooManyRequests creates a GetEndpointsTooManyRequests with default headers values
func NewGetEndpointsTooManyRequests() *GetEndpointsTooManyRequests {
	return &GetEndpointsTooManyRequests{}
}

/*GetEndpointsTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type GetEndpointsTooManyRequests struct {
}

func (o *GetEndpointsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/endpoints][%d] getEndpointsTooManyRequests ", 429)
}

func (o *GetEndpointsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
