// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetAssistantsReader is a Reader for the GetAssistants structure.
type GetAssistantsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAssistantsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAssistantsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAssistantsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAssistantsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAssistantsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAssistantsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAssistantsOK creates a GetAssistantsOK with default headers values
func NewGetAssistantsOK() *GetAssistantsOK {
	return &GetAssistantsOK{}
}

/*GetAssistantsOK handles this case with default header values.

A personal assistant apps JSON object containing the endpoint URLs for Cortana applications and the user's endpoint keys.
*/
type GetAssistantsOK struct {
}

func (o *GetAssistantsOK) Error() string {
	return fmt.Sprintf("[GET /apps/assistants][%d] getAssistantsOK ", 200)
}

func (o *GetAssistantsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAssistantsBadRequest creates a GetAssistantsBadRequest with default headers values
func NewGetAssistantsBadRequest() *GetAssistantsBadRequest {
	return &GetAssistantsBadRequest{}
}

/*GetAssistantsBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.
*/
type GetAssistantsBadRequest struct {
}

func (o *GetAssistantsBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/assistants][%d] getAssistantsBadRequest ", 400)
}

func (o *GetAssistantsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAssistantsUnauthorized creates a GetAssistantsUnauthorized with default headers values
func NewGetAssistantsUnauthorized() *GetAssistantsUnauthorized {
	return &GetAssistantsUnauthorized{}
}

/*GetAssistantsUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* invalid, malformed, or empty subscription key
* subscription key doesn't match region
* you are not the owner or collaborator
*/
type GetAssistantsUnauthorized struct {
}

func (o *GetAssistantsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/assistants][%d] getAssistantsUnauthorized ", 401)
}

func (o *GetAssistantsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAssistantsForbidden creates a GetAssistantsForbidden with default headers values
func NewGetAssistantsForbidden() *GetAssistantsForbidden {
	return &GetAssistantsForbidden{}
}

/*GetAssistantsForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type GetAssistantsForbidden struct {
}

func (o *GetAssistantsForbidden) Error() string {
	return fmt.Sprintf("[GET /apps/assistants][%d] getAssistantsForbidden ", 403)
}

func (o *GetAssistantsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAssistantsTooManyRequests creates a GetAssistantsTooManyRequests with default headers values
func NewGetAssistantsTooManyRequests() *GetAssistantsTooManyRequests {
	return &GetAssistantsTooManyRequests{}
}

/*GetAssistantsTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type GetAssistantsTooManyRequests struct {
}

func (o *GetAssistantsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /apps/assistants][%d] getAssistantsTooManyRequests ", 429)
}

func (o *GetAssistantsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
