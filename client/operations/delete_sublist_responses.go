// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteSublistReader is a Reader for the DeleteSublist structure.
type DeleteSublistReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSublistReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSublistOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSublistBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteSublistUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteSublistForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteSublistTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSublistOK creates a DeleteSublistOK with default headers values
func NewDeleteSublistOK() *DeleteSublistOK {
	return &DeleteSublistOK{}
}

/*DeleteSublistOK handles this case with default header values.

DeleteSublistOK delete sublist o k
*/
type DeleteSublistOK struct {
}

func (o *DeleteSublistOK) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}][%d] deleteSublistOK ", 200)
}

func (o *DeleteSublistOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSublistBadRequest creates a DeleteSublistBadRequest with default headers values
func NewDeleteSublistBadRequest() *DeleteSublistBadRequest {
	return &DeleteSublistBadRequest{}
}

/*DeleteSublistBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.
*/
type DeleteSublistBadRequest struct {
}

func (o *DeleteSublistBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}][%d] deleteSublistBadRequest ", 400)
}

func (o *DeleteSublistBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSublistUnauthorized creates a DeleteSublistUnauthorized with default headers values
func NewDeleteSublistUnauthorized() *DeleteSublistUnauthorized {
	return &DeleteSublistUnauthorized{}
}

/*DeleteSublistUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls

*/
type DeleteSublistUnauthorized struct {
}

func (o *DeleteSublistUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}][%d] deleteSublistUnauthorized ", 401)
}

func (o *DeleteSublistUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSublistForbidden creates a DeleteSublistForbidden with default headers values
func NewDeleteSublistForbidden() *DeleteSublistForbidden {
	return &DeleteSublistForbidden{}
}

/*DeleteSublistForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type DeleteSublistForbidden struct {
}

func (o *DeleteSublistForbidden) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}][%d] deleteSublistForbidden ", 403)
}

func (o *DeleteSublistForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSublistTooManyRequests creates a DeleteSublistTooManyRequests with default headers values
func NewDeleteSublistTooManyRequests() *DeleteSublistTooManyRequests {
	return &DeleteSublistTooManyRequests{}
}

/*DeleteSublistTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type DeleteSublistTooManyRequests struct {
}

func (o *DeleteSublistTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}][%d] deleteSublistTooManyRequests ", 429)
}

func (o *DeleteSublistTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
