// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/crazedpeanut/luis/models"
)

// NewAddExternalKeysParams creates a new AddExternalKeysParams object
// with the default values initialized.
func NewAddExternalKeysParams() *AddExternalKeysParams {
	var ()
	return &AddExternalKeysParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddExternalKeysParamsWithTimeout creates a new AddExternalKeysParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddExternalKeysParamsWithTimeout(timeout time.Duration) *AddExternalKeysParams {
	var ()
	return &AddExternalKeysParams{

		timeout: timeout,
	}
}

// NewAddExternalKeysParamsWithContext creates a new AddExternalKeysParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddExternalKeysParamsWithContext(ctx context.Context) *AddExternalKeysParams {
	var ()
	return &AddExternalKeysParams{

		Context: ctx,
	}
}

// NewAddExternalKeysParamsWithHTTPClient creates a new AddExternalKeysParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddExternalKeysParamsWithHTTPClient(client *http.Client) *AddExternalKeysParams {
	var ()
	return &AddExternalKeysParams{
		HTTPClient: client,
	}
}

/*AddExternalKeysParams contains all the parameters to send to the API endpoint
for the add external keys operation typically these are written to a http.Request
*/
type AddExternalKeysParams struct {

	/*ExternalKeyCreateObject
	  External API key object.

	*/
	ExternalKeyCreateObject *models.ExternalKeyCreateObject

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add external keys params
func (o *AddExternalKeysParams) WithTimeout(timeout time.Duration) *AddExternalKeysParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add external keys params
func (o *AddExternalKeysParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add external keys params
func (o *AddExternalKeysParams) WithContext(ctx context.Context) *AddExternalKeysParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add external keys params
func (o *AddExternalKeysParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add external keys params
func (o *AddExternalKeysParams) WithHTTPClient(client *http.Client) *AddExternalKeysParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add external keys params
func (o *AddExternalKeysParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExternalKeyCreateObject adds the externalKeyCreateObject to the add external keys params
func (o *AddExternalKeysParams) WithExternalKeyCreateObject(externalKeyCreateObject *models.ExternalKeyCreateObject) *AddExternalKeysParams {
	o.SetExternalKeyCreateObject(externalKeyCreateObject)
	return o
}

// SetExternalKeyCreateObject adds the externalKeyCreateObject to the add external keys params
func (o *AddExternalKeysParams) SetExternalKeyCreateObject(externalKeyCreateObject *models.ExternalKeyCreateObject) {
	o.ExternalKeyCreateObject = externalKeyCreateObject
}

// WriteToRequest writes these params to a swagger request
func (o *AddExternalKeysParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ExternalKeyCreateObject != nil {
		if err := r.SetBodyParam(o.ExternalKeyCreateObject); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
