// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/crazedpeanut/go-luis-authoring-client/models"
)

// NewUpdateEntityParams creates a new UpdateEntityParams object
// with the default values initialized.
func NewUpdateEntityParams() *UpdateEntityParams {
	var ()
	return &UpdateEntityParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateEntityParamsWithTimeout creates a new UpdateEntityParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateEntityParamsWithTimeout(timeout time.Duration) *UpdateEntityParams {
	var ()
	return &UpdateEntityParams{

		timeout: timeout,
	}
}

// NewUpdateEntityParamsWithContext creates a new UpdateEntityParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateEntityParamsWithContext(ctx context.Context) *UpdateEntityParams {
	var ()
	return &UpdateEntityParams{

		Context: ctx,
	}
}

// NewUpdateEntityParamsWithHTTPClient creates a new UpdateEntityParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateEntityParamsWithHTTPClient(client *http.Client) *UpdateEntityParams {
	var ()
	return &UpdateEntityParams{
		HTTPClient: client,
	}
}

/*UpdateEntityParams contains all the parameters to send to the API endpoint
for the update entity operation typically these are written to a http.Request
*/
type UpdateEntityParams struct {

	/*AppID
	  Format - guid. The application ID.

	*/
	AppID string
	/*EntityID
	  Format - guid. The entity extractor ID.

	*/
	EntityID string
	/*ModelUpdateObject
	  A model object containing the new entity extractor name.

	*/
	ModelUpdateObject *models.ModelUpdateObject
	/*VersionID
	  The task version ID.

	*/
	VersionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update entity params
func (o *UpdateEntityParams) WithTimeout(timeout time.Duration) *UpdateEntityParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update entity params
func (o *UpdateEntityParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update entity params
func (o *UpdateEntityParams) WithContext(ctx context.Context) *UpdateEntityParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update entity params
func (o *UpdateEntityParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update entity params
func (o *UpdateEntityParams) WithHTTPClient(client *http.Client) *UpdateEntityParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update entity params
func (o *UpdateEntityParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAppID adds the appID to the update entity params
func (o *UpdateEntityParams) WithAppID(appID string) *UpdateEntityParams {
	o.SetAppID(appID)
	return o
}

// SetAppID adds the appId to the update entity params
func (o *UpdateEntityParams) SetAppID(appID string) {
	o.AppID = appID
}

// WithEntityID adds the entityID to the update entity params
func (o *UpdateEntityParams) WithEntityID(entityID string) *UpdateEntityParams {
	o.SetEntityID(entityID)
	return o
}

// SetEntityID adds the entityId to the update entity params
func (o *UpdateEntityParams) SetEntityID(entityID string) {
	o.EntityID = entityID
}

// WithModelUpdateObject adds the modelUpdateObject to the update entity params
func (o *UpdateEntityParams) WithModelUpdateObject(modelUpdateObject *models.ModelUpdateObject) *UpdateEntityParams {
	o.SetModelUpdateObject(modelUpdateObject)
	return o
}

// SetModelUpdateObject adds the modelUpdateObject to the update entity params
func (o *UpdateEntityParams) SetModelUpdateObject(modelUpdateObject *models.ModelUpdateObject) {
	o.ModelUpdateObject = modelUpdateObject
}

// WithVersionID adds the versionID to the update entity params
func (o *UpdateEntityParams) WithVersionID(versionID string) *UpdateEntityParams {
	o.SetVersionID(versionID)
	return o
}

// SetVersionID adds the versionId to the update entity params
func (o *UpdateEntityParams) SetVersionID(versionID string) {
	o.VersionID = versionID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateEntityParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param appId
	if err := r.SetPathParam("appId", o.AppID); err != nil {
		return err
	}

	// path param entityId
	if err := r.SetPathParam("entityId", o.EntityID); err != nil {
		return err
	}

	if o.ModelUpdateObject != nil {
		if err := r.SetBodyParam(o.ModelUpdateObject); err != nil {
			return err
		}
	}

	// path param versionId
	if err := r.SetPathParam("versionId", o.VersionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
