// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RemoveUserFromAccessListReader is a Reader for the RemoveUserFromAccessList structure.
type RemoveUserFromAccessListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveUserFromAccessListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveUserFromAccessListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveUserFromAccessListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRemoveUserFromAccessListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRemoveUserFromAccessListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRemoveUserFromAccessListTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoveUserFromAccessListOK creates a RemoveUserFromAccessListOK with default headers values
func NewRemoveUserFromAccessListOK() *RemoveUserFromAccessListOK {
	return &RemoveUserFromAccessListOK{}
}

/*RemoveUserFromAccessListOK handles this case with default header values.

RemoveUserFromAccessListOK remove user from access list o k
*/
type RemoveUserFromAccessListOK struct {
}

func (o *RemoveUserFromAccessListOK) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/permissions][%d] removeUserFromAccessListOK ", 200)
}

func (o *RemoveUserFromAccessListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUserFromAccessListBadRequest creates a RemoveUserFromAccessListBadRequest with default headers values
func NewRemoveUserFromAccessListBadRequest() *RemoveUserFromAccessListBadRequest {
	return &RemoveUserFromAccessListBadRequest{}
}

/*RemoveUserFromAccessListBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.
*/
type RemoveUserFromAccessListBadRequest struct {
}

func (o *RemoveUserFromAccessListBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/permissions][%d] removeUserFromAccessListBadRequest ", 400)
}

func (o *RemoveUserFromAccessListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUserFromAccessListUnauthorized creates a RemoveUserFromAccessListUnauthorized with default headers values
func NewRemoveUserFromAccessListUnauthorized() *RemoveUserFromAccessListUnauthorized {
	return &RemoveUserFromAccessListUnauthorized{}
}

/*RemoveUserFromAccessListUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls
*/
type RemoveUserFromAccessListUnauthorized struct {
}

func (o *RemoveUserFromAccessListUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/permissions][%d] removeUserFromAccessListUnauthorized ", 401)
}

func (o *RemoveUserFromAccessListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUserFromAccessListForbidden creates a RemoveUserFromAccessListForbidden with default headers values
func NewRemoveUserFromAccessListForbidden() *RemoveUserFromAccessListForbidden {
	return &RemoveUserFromAccessListForbidden{}
}

/*RemoveUserFromAccessListForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type RemoveUserFromAccessListForbidden struct {
}

func (o *RemoveUserFromAccessListForbidden) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/permissions][%d] removeUserFromAccessListForbidden ", 403)
}

func (o *RemoveUserFromAccessListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUserFromAccessListTooManyRequests creates a RemoveUserFromAccessListTooManyRequests with default headers values
func NewRemoveUserFromAccessListTooManyRequests() *RemoveUserFromAccessListTooManyRequests {
	return &RemoveUserFromAccessListTooManyRequests{}
}

/*RemoveUserFromAccessListTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type RemoveUserFromAccessListTooManyRequests struct {
}

func (o *RemoveUserFromAccessListTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/permissions][%d] removeUserFromAccessListTooManyRequests ", 429)
}

func (o *RemoveUserFromAccessListTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
