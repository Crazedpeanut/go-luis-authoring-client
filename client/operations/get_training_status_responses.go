// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/crazedpeanut/go-luis-authoring-client/models"
)

// GetTrainingStatusReader is a Reader for the GetTrainingStatus structure.
type GetTrainingStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTrainingStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTrainingStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTrainingStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTrainingStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTrainingStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetTrainingStatusTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTrainingStatusOK creates a GetTrainingStatusOK with default headers values
func NewGetTrainingStatusOK() *GetTrainingStatusOK {
	return &GetTrainingStatusOK{}
}

/*GetTrainingStatusOK handles this case with default header values.

A successful response provides an array of training status details for a LUIS app. Each element in the response array provides training status for a model (intent or entity).

**Note:** Training status is not provided for prebuilt entities because they are pretrained.

The modelId property corresponds to an intent or entity. To get the name and type of each model, use the models API which has a request URL in this format:

* https://westus.api.cognitive.microsoft.com/luis/api/v2.0/apps/{appId}/versions/{versionId}/models

The details property for each model can contain the following fields:

* statusId :An integer from 0 to 3 that corresponds to the value of the status field.

* status: A string with one of the following values:

    * Success
    * UpToDate
    * InProgress
    * Fail

        * If the status is 'Fail', the failureReason property provides the reason for failure.

* exampleCount: The number of examples used for training. In the case of the None intent or prebuilt domain intents and entities, this number includes examples provided internally by the system as well as examples you added to your LUIS app.

* failureReason: A string that indicates the reason training failed. The value 'FewLabels' means that no labeled examples were provided for training.

* trainingDateTime: A string indicating the time the model was last trained. The value uses the ISO 8601 format for representing times in UTC (Coordinated Universal Time) with a UTC designator ('Z'), for example: '2017-08-10T01:08:34Z


*/
type GetTrainingStatusOK struct {
	Payload models.TrainStatusObject
}

func (o *GetTrainingStatusOK) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/train][%d] getTrainingStatusOK  %+v", 200, o.Payload)
}

func (o *GetTrainingStatusOK) GetPayload() models.TrainStatusObject {
	return o.Payload
}

func (o *GetTrainingStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTrainingStatusBadRequest creates a GetTrainingStatusBadRequest with default headers values
func NewGetTrainingStatusBadRequest() *GetTrainingStatusBadRequest {
	return &GetTrainingStatusBadRequest{}
}

/*GetTrainingStatusBadRequest handles this case with default header values.

This response can occur for any of the following reasons:

* You need to submit a training request before you request training status.
* The format of appId is incorrect.
* The value of appId is incorrect.
* The value of  versionId is incorrect.
*/
type GetTrainingStatusBadRequest struct {
}

func (o *GetTrainingStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/train][%d] getTrainingStatusBadRequest ", 400)
}

func (o *GetTrainingStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTrainingStatusUnauthorized creates a GetTrainingStatusUnauthorized with default headers values
func NewGetTrainingStatusUnauthorized() *GetTrainingStatusUnauthorized {
	return &GetTrainingStatusUnauthorized{}
}

/*GetTrainingStatusUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls



*/
type GetTrainingStatusUnauthorized struct {
}

func (o *GetTrainingStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/train][%d] getTrainingStatusUnauthorized ", 401)
}

func (o *GetTrainingStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTrainingStatusForbidden creates a GetTrainingStatusForbidden with default headers values
func NewGetTrainingStatusForbidden() *GetTrainingStatusForbidden {
	return &GetTrainingStatusForbidden{}
}

/*GetTrainingStatusForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type GetTrainingStatusForbidden struct {
}

func (o *GetTrainingStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/train][%d] getTrainingStatusForbidden ", 403)
}

func (o *GetTrainingStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTrainingStatusTooManyRequests creates a GetTrainingStatusTooManyRequests with default headers values
func NewGetTrainingStatusTooManyRequests() *GetTrainingStatusTooManyRequests {
	return &GetTrainingStatusTooManyRequests{}
}

/*GetTrainingStatusTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type GetTrainingStatusTooManyRequests struct {
}

func (o *GetTrainingStatusTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/train][%d] getTrainingStatusTooManyRequests ", 429)
}

func (o *GetTrainingStatusTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
