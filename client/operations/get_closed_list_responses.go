// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetClosedListReader is a Reader for the GetClosedList structure.
type GetClosedListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClosedListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClosedListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetClosedListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetClosedListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClosedListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetClosedListTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetClosedListOK creates a GetClosedListOK with default headers values
func NewGetClosedListOK() *GetClosedListOK {
	return &GetClosedListOK{}
}

/*GetClosedListOK handles this case with default header values.

The closed list model info.
*/
type GetClosedListOK struct {
}

func (o *GetClosedListOK) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}][%d] getClosedListOK ", 200)
}

func (o *GetClosedListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClosedListBadRequest creates a GetClosedListBadRequest with default headers values
func NewGetClosedListBadRequest() *GetClosedListBadRequest {
	return &GetClosedListBadRequest{}
}

/*GetClosedListBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.
*/
type GetClosedListBadRequest struct {
}

func (o *GetClosedListBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}][%d] getClosedListBadRequest ", 400)
}

func (o *GetClosedListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClosedListUnauthorized creates a GetClosedListUnauthorized with default headers values
func NewGetClosedListUnauthorized() *GetClosedListUnauthorized {
	return &GetClosedListUnauthorized{}
}

/*GetClosedListUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls
*/
type GetClosedListUnauthorized struct {
}

func (o *GetClosedListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}][%d] getClosedListUnauthorized ", 401)
}

func (o *GetClosedListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClosedListForbidden creates a GetClosedListForbidden with default headers values
func NewGetClosedListForbidden() *GetClosedListForbidden {
	return &GetClosedListForbidden{}
}

/*GetClosedListForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type GetClosedListForbidden struct {
}

func (o *GetClosedListForbidden) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}][%d] getClosedListForbidden ", 403)
}

func (o *GetClosedListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClosedListTooManyRequests creates a GetClosedListTooManyRequests with default headers values
func NewGetClosedListTooManyRequests() *GetClosedListTooManyRequests {
	return &GetClosedListTooManyRequests{}
}

/*GetClosedListTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type GetClosedListTooManyRequests struct {
}

func (o *GetClosedListTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}][%d] getClosedListTooManyRequests ", 429)
}

func (o *GetClosedListTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
