// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetClosedListsReader is a Reader for the GetClosedLists structure.
type GetClosedListsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClosedListsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClosedListsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetClosedListsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetClosedListsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClosedListsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetClosedListsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetClosedListsOK creates a GetClosedListsOK with default headers values
func NewGetClosedListsOK() *GetClosedListsOK {
	return &GetClosedListsOK{}
}

/*GetClosedListsOK handles this case with default header values.

A list of closedlist entity model infos.
*/
type GetClosedListsOK struct {
}

func (o *GetClosedListsOK) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/closedlists][%d] getClosedListsOK ", 200)
}

func (o *GetClosedListsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClosedListsBadRequest creates a GetClosedListsBadRequest with default headers values
func NewGetClosedListsBadRequest() *GetClosedListsBadRequest {
	return &GetClosedListsBadRequest{}
}

/*GetClosedListsBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.
*/
type GetClosedListsBadRequest struct {
}

func (o *GetClosedListsBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/closedlists][%d] getClosedListsBadRequest ", 400)
}

func (o *GetClosedListsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClosedListsUnauthorized creates a GetClosedListsUnauthorized with default headers values
func NewGetClosedListsUnauthorized() *GetClosedListsUnauthorized {
	return &GetClosedListsUnauthorized{}
}

/*GetClosedListsUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls
*/
type GetClosedListsUnauthorized struct {
}

func (o *GetClosedListsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/closedlists][%d] getClosedListsUnauthorized ", 401)
}

func (o *GetClosedListsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClosedListsForbidden creates a GetClosedListsForbidden with default headers values
func NewGetClosedListsForbidden() *GetClosedListsForbidden {
	return &GetClosedListsForbidden{}
}

/*GetClosedListsForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type GetClosedListsForbidden struct {
}

func (o *GetClosedListsForbidden) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/closedlists][%d] getClosedListsForbidden ", 403)
}

func (o *GetClosedListsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClosedListsTooManyRequests creates a GetClosedListsTooManyRequests with default headers values
func NewGetClosedListsTooManyRequests() *GetClosedListsTooManyRequests {
	return &GetClosedListsTooManyRequests{}
}

/*GetClosedListsTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type GetClosedListsTooManyRequests struct {
}

func (o *GetClosedListsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/closedlists][%d] getClosedListsTooManyRequests ", 429)
}

func (o *GetClosedListsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
