// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdatePhraseListFeatureReader is a Reader for the UpdatePhraseListFeature structure.
type UpdatePhraseListFeatureReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePhraseListFeatureReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePhraseListFeatureOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdatePhraseListFeatureBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdatePhraseListFeatureUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePhraseListFeatureForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdatePhraseListFeatureTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdatePhraseListFeatureOK creates a UpdatePhraseListFeatureOK with default headers values
func NewUpdatePhraseListFeatureOK() *UpdatePhraseListFeatureOK {
	return &UpdatePhraseListFeatureOK{}
}

/*UpdatePhraseListFeatureOK handles this case with default header values.

UpdatePhraseListFeatureOK update phrase list feature o k
*/
type UpdatePhraseListFeatureOK struct {
}

func (o *UpdatePhraseListFeatureOK) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/phraselists/{phraselistId}][%d] updatePhraseListFeatureOK ", 200)
}

func (o *UpdatePhraseListFeatureOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePhraseListFeatureBadRequest creates a UpdatePhraseListFeatureBadRequest with default headers values
func NewUpdatePhraseListFeatureBadRequest() *UpdatePhraseListFeatureBadRequest {
	return &UpdatePhraseListFeatureBadRequest{}
}

/*UpdatePhraseListFeatureBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.

This error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.
*/
type UpdatePhraseListFeatureBadRequest struct {
}

func (o *UpdatePhraseListFeatureBadRequest) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/phraselists/{phraselistId}][%d] updatePhraseListFeatureBadRequest ", 400)
}

func (o *UpdatePhraseListFeatureBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePhraseListFeatureUnauthorized creates a UpdatePhraseListFeatureUnauthorized with default headers values
func NewUpdatePhraseListFeatureUnauthorized() *UpdatePhraseListFeatureUnauthorized {
	return &UpdatePhraseListFeatureUnauthorized{}
}

/*UpdatePhraseListFeatureUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls

*/
type UpdatePhraseListFeatureUnauthorized struct {
}

func (o *UpdatePhraseListFeatureUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/phraselists/{phraselistId}][%d] updatePhraseListFeatureUnauthorized ", 401)
}

func (o *UpdatePhraseListFeatureUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePhraseListFeatureForbidden creates a UpdatePhraseListFeatureForbidden with default headers values
func NewUpdatePhraseListFeatureForbidden() *UpdatePhraseListFeatureForbidden {
	return &UpdatePhraseListFeatureForbidden{}
}

/*UpdatePhraseListFeatureForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type UpdatePhraseListFeatureForbidden struct {
}

func (o *UpdatePhraseListFeatureForbidden) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/phraselists/{phraselistId}][%d] updatePhraseListFeatureForbidden ", 403)
}

func (o *UpdatePhraseListFeatureForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdatePhraseListFeatureTooManyRequests creates a UpdatePhraseListFeatureTooManyRequests with default headers values
func NewUpdatePhraseListFeatureTooManyRequests() *UpdatePhraseListFeatureTooManyRequests {
	return &UpdatePhraseListFeatureTooManyRequests{}
}

/*UpdatePhraseListFeatureTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type UpdatePhraseListFeatureTooManyRequests struct {
}

func (o *UpdatePhraseListFeatureTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/phraselists/{phraselistId}][%d] updatePhraseListFeatureTooManyRequests ", 429)
}

func (o *UpdatePhraseListFeatureTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
