// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateSublistReader is a Reader for the UpdateSublist structure.
type UpdateSublistReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSublistReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSublistOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateSublistBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateSublistUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateSublistForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateSublistTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateSublistOK creates a UpdateSublistOK with default headers values
func NewUpdateSublistOK() *UpdateSublistOK {
	return &UpdateSublistOK{}
}

/*UpdateSublistOK handles this case with default header values.

UpdateSublistOK update sublist o k
*/
type UpdateSublistOK struct {
}

func (o *UpdateSublistOK) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}][%d] updateSublistOK ", 200)
}

func (o *UpdateSublistOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSublistBadRequest creates a UpdateSublistBadRequest with default headers values
func NewUpdateSublistBadRequest() *UpdateSublistBadRequest {
	return &UpdateSublistBadRequest{}
}

/*UpdateSublistBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.

This error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.
*/
type UpdateSublistBadRequest struct {
}

func (o *UpdateSublistBadRequest) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}][%d] updateSublistBadRequest ", 400)
}

func (o *UpdateSublistBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSublistUnauthorized creates a UpdateSublistUnauthorized with default headers values
func NewUpdateSublistUnauthorized() *UpdateSublistUnauthorized {
	return &UpdateSublistUnauthorized{}
}

/*UpdateSublistUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls

*/
type UpdateSublistUnauthorized struct {
}

func (o *UpdateSublistUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}][%d] updateSublistUnauthorized ", 401)
}

func (o *UpdateSublistUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSublistForbidden creates a UpdateSublistForbidden with default headers values
func NewUpdateSublistForbidden() *UpdateSublistForbidden {
	return &UpdateSublistForbidden{}
}

/*UpdateSublistForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type UpdateSublistForbidden struct {
}

func (o *UpdateSublistForbidden) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}][%d] updateSublistForbidden ", 403)
}

func (o *UpdateSublistForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSublistTooManyRequests creates a UpdateSublistTooManyRequests with default headers values
func NewUpdateSublistTooManyRequests() *UpdateSublistTooManyRequests {
	return &UpdateSublistTooManyRequests{}
}

/*UpdateSublistTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type UpdateSublistTooManyRequests struct {
}

func (o *UpdateSublistTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}][%d] updateSublistTooManyRequests ", 429)
}

func (o *UpdateSublistTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
