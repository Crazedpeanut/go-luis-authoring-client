// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetDomainsReader is a Reader for the GetDomains structure.
type GetDomainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDomainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDomainsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDomainsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDomainsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDomainsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDomainsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDomainsOK creates a GetDomainsOK with default headers values
func NewGetDomainsOK() *GetDomainsOK {
	return &GetDomainsOK{}
}

/*GetDomainsOK handles this case with default header values.

A list object containing the available application domains.
*/
type GetDomainsOK struct {
}

func (o *GetDomainsOK) Error() string {
	return fmt.Sprintf("[GET /apps/domains][%d] getDomainsOK ", 200)
}

func (o *GetDomainsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDomainsBadRequest creates a GetDomainsBadRequest with default headers values
func NewGetDomainsBadRequest() *GetDomainsBadRequest {
	return &GetDomainsBadRequest{}
}

/*GetDomainsBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.
*/
type GetDomainsBadRequest struct {
}

func (o *GetDomainsBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/domains][%d] getDomainsBadRequest ", 400)
}

func (o *GetDomainsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDomainsUnauthorized creates a GetDomainsUnauthorized with default headers values
func NewGetDomainsUnauthorized() *GetDomainsUnauthorized {
	return &GetDomainsUnauthorized{}
}

/*GetDomainsUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls
*/
type GetDomainsUnauthorized struct {
}

func (o *GetDomainsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/domains][%d] getDomainsUnauthorized ", 401)
}

func (o *GetDomainsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDomainsForbidden creates a GetDomainsForbidden with default headers values
func NewGetDomainsForbidden() *GetDomainsForbidden {
	return &GetDomainsForbidden{}
}

/*GetDomainsForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type GetDomainsForbidden struct {
}

func (o *GetDomainsForbidden) Error() string {
	return fmt.Sprintf("[GET /apps/domains][%d] getDomainsForbidden ", 403)
}

func (o *GetDomainsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDomainsTooManyRequests creates a GetDomainsTooManyRequests with default headers values
func NewGetDomainsTooManyRequests() *GetDomainsTooManyRequests {
	return &GetDomainsTooManyRequests{}
}

/*GetDomainsTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type GetDomainsTooManyRequests struct {
}

func (o *GetDomainsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /apps/domains][%d] getDomainsTooManyRequests ", 429)
}

func (o *GetDomainsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
