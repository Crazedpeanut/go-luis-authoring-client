// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateIntentReader is a Reader for the UpdateIntent structure.
type UpdateIntentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateIntentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateIntentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateIntentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateIntentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateIntentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateIntentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateIntentOK creates a UpdateIntentOK with default headers values
func NewUpdateIntentOK() *UpdateIntentOK {
	return &UpdateIntentOK{}
}

/*UpdateIntentOK handles this case with default header values.

UpdateIntentOK update intent o k
*/
type UpdateIntentOK struct {
}

func (o *UpdateIntentOK) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/intents/{intentId}][%d] updateIntentOK ", 200)
}

func (o *UpdateIntentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateIntentBadRequest creates a UpdateIntentBadRequest with default headers values
func NewUpdateIntentBadRequest() *UpdateIntentBadRequest {
	return &UpdateIntentBadRequest{}
}

/*UpdateIntentBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.

This error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.
*/
type UpdateIntentBadRequest struct {
}

func (o *UpdateIntentBadRequest) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/intents/{intentId}][%d] updateIntentBadRequest ", 400)
}

func (o *UpdateIntentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateIntentUnauthorized creates a UpdateIntentUnauthorized with default headers values
func NewUpdateIntentUnauthorized() *UpdateIntentUnauthorized {
	return &UpdateIntentUnauthorized{}
}

/*UpdateIntentUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls

*/
type UpdateIntentUnauthorized struct {
}

func (o *UpdateIntentUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/intents/{intentId}][%d] updateIntentUnauthorized ", 401)
}

func (o *UpdateIntentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateIntentForbidden creates a UpdateIntentForbidden with default headers values
func NewUpdateIntentForbidden() *UpdateIntentForbidden {
	return &UpdateIntentForbidden{}
}

/*UpdateIntentForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type UpdateIntentForbidden struct {
}

func (o *UpdateIntentForbidden) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/intents/{intentId}][%d] updateIntentForbidden ", 403)
}

func (o *UpdateIntentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateIntentTooManyRequests creates a UpdateIntentTooManyRequests with default headers values
func NewUpdateIntentTooManyRequests() *UpdateIntentTooManyRequests {
	return &UpdateIntentTooManyRequests{}
}

/*UpdateIntentTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type UpdateIntentTooManyRequests struct {
}

func (o *UpdateIntentTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/intents/{intentId}][%d] updateIntentTooManyRequests ", 429)
}

func (o *UpdateIntentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
