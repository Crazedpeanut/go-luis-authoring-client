// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RenameSubscriptionKeyReader is a Reader for the RenameSubscriptionKey structure.
type RenameSubscriptionKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RenameSubscriptionKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRenameSubscriptionKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRenameSubscriptionKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRenameSubscriptionKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewRenameSubscriptionKeyGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRenameSubscriptionKeyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRenameSubscriptionKeyOK creates a RenameSubscriptionKeyOK with default headers values
func NewRenameSubscriptionKeyOK() *RenameSubscriptionKeyOK {
	return &RenameSubscriptionKeyOK{}
}

/*RenameSubscriptionKeyOK handles this case with default header values.

RenameSubscriptionKeyOK rename subscription key o k
*/
type RenameSubscriptionKeyOK struct {
}

func (o *RenameSubscriptionKeyOK) Error() string {
	return fmt.Sprintf("[PUT /subscriptions][%d] renameSubscriptionKeyOK ", 200)
}

func (o *RenameSubscriptionKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRenameSubscriptionKeyBadRequest creates a RenameSubscriptionKeyBadRequest with default headers values
func NewRenameSubscriptionKeyBadRequest() *RenameSubscriptionKeyBadRequest {
	return &RenameSubscriptionKeyBadRequest{}
}

/*RenameSubscriptionKeyBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.

This error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.
*/
type RenameSubscriptionKeyBadRequest struct {
}

func (o *RenameSubscriptionKeyBadRequest) Error() string {
	return fmt.Sprintf("[PUT /subscriptions][%d] renameSubscriptionKeyBadRequest ", 400)
}

func (o *RenameSubscriptionKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRenameSubscriptionKeyUnauthorized creates a RenameSubscriptionKeyUnauthorized with default headers values
func NewRenameSubscriptionKeyUnauthorized() *RenameSubscriptionKeyUnauthorized {
	return &RenameSubscriptionKeyUnauthorized{}
}

/*RenameSubscriptionKeyUnauthorized handles this case with default header values.

RenameSubscriptionKeyUnauthorized rename subscription key unauthorized
*/
type RenameSubscriptionKeyUnauthorized struct {
}

func (o *RenameSubscriptionKeyUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /subscriptions][%d] renameSubscriptionKeyUnauthorized ", 401)
}

func (o *RenameSubscriptionKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRenameSubscriptionKeyGone creates a RenameSubscriptionKeyGone with default headers values
func NewRenameSubscriptionKeyGone() *RenameSubscriptionKeyGone {
	return &RenameSubscriptionKeyGone{}
}

/*RenameSubscriptionKeyGone handles this case with default header values.

THIS API IS DEPRECATED.
*/
type RenameSubscriptionKeyGone struct {
}

func (o *RenameSubscriptionKeyGone) Error() string {
	return fmt.Sprintf("[PUT /subscriptions][%d] renameSubscriptionKeyGone ", 410)
}

func (o *RenameSubscriptionKeyGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRenameSubscriptionKeyTooManyRequests creates a RenameSubscriptionKeyTooManyRequests with default headers values
func NewRenameSubscriptionKeyTooManyRequests() *RenameSubscriptionKeyTooManyRequests {
	return &RenameSubscriptionKeyTooManyRequests{}
}

/*RenameSubscriptionKeyTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type RenameSubscriptionKeyTooManyRequests struct {
}

func (o *RenameSubscriptionKeyTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /subscriptions][%d] renameSubscriptionKeyTooManyRequests ", 429)
}

func (o *RenameSubscriptionKeyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
