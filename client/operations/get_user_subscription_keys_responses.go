// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetUserSubscriptionKeysReader is a Reader for the GetUserSubscriptionKeys structure.
type GetUserSubscriptionKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserSubscriptionKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserSubscriptionKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserSubscriptionKeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserSubscriptionKeysUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetUserSubscriptionKeysGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserSubscriptionKeysTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUserSubscriptionKeysOK creates a GetUserSubscriptionKeysOK with default headers values
func NewGetUserSubscriptionKeysOK() *GetUserSubscriptionKeysOK {
	return &GetUserSubscriptionKeysOK{}
}

/*GetUserSubscriptionKeysOK handles this case with default header values.

A list containing subscription keys info.
*/
type GetUserSubscriptionKeysOK struct {
}

func (o *GetUserSubscriptionKeysOK) Error() string {
	return fmt.Sprintf("[GET /subscriptions][%d] getUserSubscriptionKeysOK ", 200)
}

func (o *GetUserSubscriptionKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserSubscriptionKeysBadRequest creates a GetUserSubscriptionKeysBadRequest with default headers values
func NewGetUserSubscriptionKeysBadRequest() *GetUserSubscriptionKeysBadRequest {
	return &GetUserSubscriptionKeysBadRequest{}
}

/*GetUserSubscriptionKeysBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.
*/
type GetUserSubscriptionKeysBadRequest struct {
}

func (o *GetUserSubscriptionKeysBadRequest) Error() string {
	return fmt.Sprintf("[GET /subscriptions][%d] getUserSubscriptionKeysBadRequest ", 400)
}

func (o *GetUserSubscriptionKeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserSubscriptionKeysUnauthorized creates a GetUserSubscriptionKeysUnauthorized with default headers values
func NewGetUserSubscriptionKeysUnauthorized() *GetUserSubscriptionKeysUnauthorized {
	return &GetUserSubscriptionKeysUnauthorized{}
}

/*GetUserSubscriptionKeysUnauthorized handles this case with default header values.

GetUserSubscriptionKeysUnauthorized get user subscription keys unauthorized
*/
type GetUserSubscriptionKeysUnauthorized struct {
}

func (o *GetUserSubscriptionKeysUnauthorized) Error() string {
	return fmt.Sprintf("[GET /subscriptions][%d] getUserSubscriptionKeysUnauthorized ", 401)
}

func (o *GetUserSubscriptionKeysUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserSubscriptionKeysGone creates a GetUserSubscriptionKeysGone with default headers values
func NewGetUserSubscriptionKeysGone() *GetUserSubscriptionKeysGone {
	return &GetUserSubscriptionKeysGone{}
}

/*GetUserSubscriptionKeysGone handles this case with default header values.

THIS API IS DEPRECATED.
*/
type GetUserSubscriptionKeysGone struct {
}

func (o *GetUserSubscriptionKeysGone) Error() string {
	return fmt.Sprintf("[GET /subscriptions][%d] getUserSubscriptionKeysGone ", 410)
}

func (o *GetUserSubscriptionKeysGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserSubscriptionKeysTooManyRequests creates a GetUserSubscriptionKeysTooManyRequests with default headers values
func NewGetUserSubscriptionKeysTooManyRequests() *GetUserSubscriptionKeysTooManyRequests {
	return &GetUserSubscriptionKeysTooManyRequests{}
}

/*GetUserSubscriptionKeysTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type GetUserSubscriptionKeysTooManyRequests struct {
}

func (o *GetUserSubscriptionKeysTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /subscriptions][%d] getUserSubscriptionKeysTooManyRequests ", 429)
}

func (o *GetUserSubscriptionKeysTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
