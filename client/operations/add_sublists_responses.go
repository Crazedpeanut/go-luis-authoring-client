// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddSublistsReader is a Reader for the AddSublists structure.
type AddSublistsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddSublistsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddSublistsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddSublistsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddSublistsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddSublistsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAddSublistsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddSublistsOK creates a AddSublistsOK with default headers values
func NewAddSublistsOK() *AddSublistsOK {
	return &AddSublistsOK{}
}

/*AddSublistsOK handles this case with default header values.

AddSublistsOK add sublists o k
*/
type AddSublistsOK struct {
}

func (o *AddSublistsOK) Error() string {
	return fmt.Sprintf("[PATCH /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}][%d] addSublistsOK ", 200)
}

func (o *AddSublistsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSublistsBadRequest creates a AddSublistsBadRequest with default headers values
func NewAddSublistsBadRequest() *AddSublistsBadRequest {
	return &AddSublistsBadRequest{}
}

/*AddSublistsBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.

This error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.

This error can be returned if the sublist is already in the closed list.
*/
type AddSublistsBadRequest struct {
}

func (o *AddSublistsBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}][%d] addSublistsBadRequest ", 400)
}

func (o *AddSublistsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSublistsUnauthorized creates a AddSublistsUnauthorized with default headers values
func NewAddSublistsUnauthorized() *AddSublistsUnauthorized {
	return &AddSublistsUnauthorized{}
}

/*AddSublistsUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls

*/
type AddSublistsUnauthorized struct {
}

func (o *AddSublistsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}][%d] addSublistsUnauthorized ", 401)
}

func (o *AddSublistsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSublistsForbidden creates a AddSublistsForbidden with default headers values
func NewAddSublistsForbidden() *AddSublistsForbidden {
	return &AddSublistsForbidden{}
}

/*AddSublistsForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type AddSublistsForbidden struct {
}

func (o *AddSublistsForbidden) Error() string {
	return fmt.Sprintf("[PATCH /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}][%d] addSublistsForbidden ", 403)
}

func (o *AddSublistsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSublistsTooManyRequests creates a AddSublistsTooManyRequests with default headers values
func NewAddSublistsTooManyRequests() *AddSublistsTooManyRequests {
	return &AddSublistsTooManyRequests{}
}

/*AddSublistsTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type AddSublistsTooManyRequests struct {
}

func (o *AddSublistsTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /apps/{appId}/versions/{versionId}/closedlists/{clEntityId}][%d] addSublistsTooManyRequests ", 429)
}

func (o *AddSublistsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
