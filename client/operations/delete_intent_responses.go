// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteIntentReader is a Reader for the DeleteIntent structure.
type DeleteIntentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIntentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteIntentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteIntentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteIntentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteIntentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteIntentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteIntentOK creates a DeleteIntentOK with default headers values
func NewDeleteIntentOK() *DeleteIntentOK {
	return &DeleteIntentOK{}
}

/*DeleteIntentOK handles this case with default header values.

DeleteIntentOK delete intent o k
*/
type DeleteIntentOK struct {
}

func (o *DeleteIntentOK) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/versions/{versionId}/intents/{intentId}][%d] deleteIntentOK ", 200)
}

func (o *DeleteIntentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIntentBadRequest creates a DeleteIntentBadRequest with default headers values
func NewDeleteIntentBadRequest() *DeleteIntentBadRequest {
	return &DeleteIntentBadRequest{}
}

/*DeleteIntentBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.
*/
type DeleteIntentBadRequest struct {
}

func (o *DeleteIntentBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/versions/{versionId}/intents/{intentId}][%d] deleteIntentBadRequest ", 400)
}

func (o *DeleteIntentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIntentUnauthorized creates a DeleteIntentUnauthorized with default headers values
func NewDeleteIntentUnauthorized() *DeleteIntentUnauthorized {
	return &DeleteIntentUnauthorized{}
}

/*DeleteIntentUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls
*/
type DeleteIntentUnauthorized struct {
}

func (o *DeleteIntentUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/versions/{versionId}/intents/{intentId}][%d] deleteIntentUnauthorized ", 401)
}

func (o *DeleteIntentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIntentForbidden creates a DeleteIntentForbidden with default headers values
func NewDeleteIntentForbidden() *DeleteIntentForbidden {
	return &DeleteIntentForbidden{}
}

/*DeleteIntentForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type DeleteIntentForbidden struct {
}

func (o *DeleteIntentForbidden) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/versions/{versionId}/intents/{intentId}][%d] deleteIntentForbidden ", 403)
}

func (o *DeleteIntentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIntentTooManyRequests creates a DeleteIntentTooManyRequests with default headers values
func NewDeleteIntentTooManyRequests() *DeleteIntentTooManyRequests {
	return &DeleteIntentTooManyRequests{}
}

/*DeleteIntentTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type DeleteIntentTooManyRequests struct {
}

func (o *DeleteIntentTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appId}/versions/{versionId}/intents/{intentId}][%d] deleteIntentTooManyRequests ", 429)
}

func (o *DeleteIntentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
