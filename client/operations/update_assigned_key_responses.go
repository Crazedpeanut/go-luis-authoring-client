// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateAssignedKeyReader is a Reader for the UpdateAssignedKey structure.
type UpdateAssignedKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAssignedKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAssignedKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAssignedKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateAssignedKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewUpdateAssignedKeyGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateAssignedKeyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateAssignedKeyOK creates a UpdateAssignedKeyOK with default headers values
func NewUpdateAssignedKeyOK() *UpdateAssignedKeyOK {
	return &UpdateAssignedKeyOK{}
}

/*UpdateAssignedKeyOK handles this case with default header values.

UpdateAssignedKeyOK update assigned key o k
*/
type UpdateAssignedKeyOK struct {
}

func (o *UpdateAssignedKeyOK) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/assignedkey][%d] updateAssignedKeyOK ", 200)
}

func (o *UpdateAssignedKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAssignedKeyBadRequest creates a UpdateAssignedKeyBadRequest with default headers values
func NewUpdateAssignedKeyBadRequest() *UpdateAssignedKeyBadRequest {
	return &UpdateAssignedKeyBadRequest{}
}

/*UpdateAssignedKeyBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.

This error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.
*/
type UpdateAssignedKeyBadRequest struct {
}

func (o *UpdateAssignedKeyBadRequest) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/assignedkey][%d] updateAssignedKeyBadRequest ", 400)
}

func (o *UpdateAssignedKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAssignedKeyUnauthorized creates a UpdateAssignedKeyUnauthorized with default headers values
func NewUpdateAssignedKeyUnauthorized() *UpdateAssignedKeyUnauthorized {
	return &UpdateAssignedKeyUnauthorized{}
}

/*UpdateAssignedKeyUnauthorized handles this case with default header values.

You do not have access.
<br>
Reasons can include:<br>
<ul>
<li>invalid, malformed, or empty subscription key
<li>you are not the owner or collaborator
<li>invalid order of API calls
<li>subscription key doesn't match region
</ul>
*/
type UpdateAssignedKeyUnauthorized struct {
}

func (o *UpdateAssignedKeyUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/assignedkey][%d] updateAssignedKeyUnauthorized ", 401)
}

func (o *UpdateAssignedKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAssignedKeyGone creates a UpdateAssignedKeyGone with default headers values
func NewUpdateAssignedKeyGone() *UpdateAssignedKeyGone {
	return &UpdateAssignedKeyGone{}
}

/*UpdateAssignedKeyGone handles this case with default header values.

THIS API IS DEPRECATED.
*/
type UpdateAssignedKeyGone struct {
}

func (o *UpdateAssignedKeyGone) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/assignedkey][%d] updateAssignedKeyGone ", 410)
}

func (o *UpdateAssignedKeyGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAssignedKeyTooManyRequests creates a UpdateAssignedKeyTooManyRequests with default headers values
func NewUpdateAssignedKeyTooManyRequests() *UpdateAssignedKeyTooManyRequests {
	return &UpdateAssignedKeyTooManyRequests{}
}

/*UpdateAssignedKeyTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type UpdateAssignedKeyTooManyRequests struct {
}

func (o *UpdateAssignedKeyTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}/versions/{versionId}/assignedkey][%d] updateAssignedKeyTooManyRequests ", 429)
}

func (o *UpdateAssignedKeyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
