// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ExportVersionReader is a Reader for the ExportVersion structure.
type ExportVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExportVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewExportVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExportVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewExportVersionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewExportVersionOK creates a ExportVersionOK with default headers values
func NewExportVersionOK() *ExportVersionOK {
	return &ExportVersionOK{}
}

/*ExportVersionOK handles this case with default header values.

The JSON string of the exported application.
*/
type ExportVersionOK struct {
}

func (o *ExportVersionOK) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/export][%d] exportVersionOK ", 200)
}

func (o *ExportVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportVersionBadRequest creates a ExportVersionBadRequest with default headers values
func NewExportVersionBadRequest() *ExportVersionBadRequest {
	return &ExportVersionBadRequest{}
}

/*ExportVersionBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.
*/
type ExportVersionBadRequest struct {
}

func (o *ExportVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/export][%d] exportVersionBadRequest ", 400)
}

func (o *ExportVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportVersionUnauthorized creates a ExportVersionUnauthorized with default headers values
func NewExportVersionUnauthorized() *ExportVersionUnauthorized {
	return &ExportVersionUnauthorized{}
}

/*ExportVersionUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls

*/
type ExportVersionUnauthorized struct {
}

func (o *ExportVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/export][%d] exportVersionUnauthorized ", 401)
}

func (o *ExportVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportVersionForbidden creates a ExportVersionForbidden with default headers values
func NewExportVersionForbidden() *ExportVersionForbidden {
	return &ExportVersionForbidden{}
}

/*ExportVersionForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type ExportVersionForbidden struct {
}

func (o *ExportVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/export][%d] exportVersionForbidden ", 403)
}

func (o *ExportVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportVersionTooManyRequests creates a ExportVersionTooManyRequests with default headers values
func NewExportVersionTooManyRequests() *ExportVersionTooManyRequests {
	return &ExportVersionTooManyRequests{}
}

/*ExportVersionTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type ExportVersionTooManyRequests struct {
}

func (o *ExportVersionTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /apps/{appId}/versions/{versionId}/export][%d] exportVersionTooManyRequests ", 429)
}

func (o *ExportVersionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
