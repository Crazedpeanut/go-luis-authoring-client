// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateApplicationReader is a Reader for the UpdateApplication structure.
type UpdateApplicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateApplicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateApplicationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateApplicationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateApplicationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateApplicationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateApplicationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateApplicationOK creates a UpdateApplicationOK with default headers values
func NewUpdateApplicationOK() *UpdateApplicationOK {
	return &UpdateApplicationOK{}
}

/*UpdateApplicationOK handles this case with default header values.

UpdateApplicationOK update application o k
*/
type UpdateApplicationOK struct {
}

func (o *UpdateApplicationOK) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}][%d] updateApplicationOK ", 200)
}

func (o *UpdateApplicationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateApplicationBadRequest creates a UpdateApplicationBadRequest with default headers values
func NewUpdateApplicationBadRequest() *UpdateApplicationBadRequest {
	return &UpdateApplicationBadRequest{}
}

/*UpdateApplicationBadRequest handles this case with default header values.

This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.

This error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.
*/
type UpdateApplicationBadRequest struct {
}

func (o *UpdateApplicationBadRequest) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}][%d] updateApplicationBadRequest ", 400)
}

func (o *UpdateApplicationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateApplicationUnauthorized creates a UpdateApplicationUnauthorized with default headers values
func NewUpdateApplicationUnauthorized() *UpdateApplicationUnauthorized {
	return &UpdateApplicationUnauthorized{}
}

/*UpdateApplicationUnauthorized handles this case with default header values.

You do not have access.

Reasons can include:

* used endpoint subscription key, instead of authoring key
* invalid, malformed, or empty authoring key
* authoring key doesn't match region
* you are not the owner or collaborator
* invalid order of API calls

*/
type UpdateApplicationUnauthorized struct {
}

func (o *UpdateApplicationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}][%d] updateApplicationUnauthorized ", 401)
}

func (o *UpdateApplicationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateApplicationForbidden creates a UpdateApplicationForbidden with default headers values
func NewUpdateApplicationForbidden() *UpdateApplicationForbidden {
	return &UpdateApplicationForbidden{}
}

/*UpdateApplicationForbidden handles this case with default header values.

Total monthly key quota limit exceeded
*/
type UpdateApplicationForbidden struct {
}

func (o *UpdateApplicationForbidden) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}][%d] updateApplicationForbidden ", 403)
}

func (o *UpdateApplicationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateApplicationTooManyRequests creates a UpdateApplicationTooManyRequests with default headers values
func NewUpdateApplicationTooManyRequests() *UpdateApplicationTooManyRequests {
	return &UpdateApplicationTooManyRequests{}
}

/*UpdateApplicationTooManyRequests handles this case with default header values.

Rate limit is exceeded.
*/
type UpdateApplicationTooManyRequests struct {
}

func (o *UpdateApplicationTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /apps/{appId}][%d] updateApplicationTooManyRequests ", 429)
}

func (o *UpdateApplicationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
